import { readonly } from "vue";

//==================== Config
// syncfusion tree에서 사용하기 위함.
export const ROOT = "Root";
export const NODE_FIELD = readonly({
	ID: "NODEID",
	CHILDREN: "CHILD_NODE",
});

// 서버 dto
export const DTO_FIELD = readonly({
	ID: "childNodeColumn",
	PARENT_ID: "parentNodeColumn",
	TABLE_ID: "tableId",
});

//==================== Menu
export const MENU_TYPE = readonly({
	ACTION: "A",
	FOLDER: "F",
});

export const MENU = readonly({
	// Config
	ID: "MENUID",
	PARENT_ID: "PARENTMENUID",
	TABLE_ID: "Menu",

	// Node
	NAME: "MENUNAME",
	PATH: "VIEWID",
	POSITION: "MENUSEQ",
	SYSTEM_ID: "SYSTEMID",
	TYPE: "MENULEVEL",
});

//==================== Factory
export const FACTORY_TABLE = readonly({
	FACTORY: "Factory",
	AREA: "Area",
	EQUIPMENT: "EquipmentDef",
	PORT: "PortDef",
});

export const FACTORY_KEY = readonly(
	Object.keys(FACTORY_TABLE).reduce((acc, key) => {
		acc[key] = FACTORY_TABLE[key].toUpperCase();
		return acc;
	}, {}),
);

export const FACTORY_ID_CONFIG = {
	FACTORY_ID: "FACTORYID",
	AREA_ID: "AREAID",
	ROOT_AREA_ID: "ROOTAREAID",
	PARENT_AREA_ID: "PARENTAREAID",
	EQUIPMENT_ID: "EQUIPMENTID",
	PARENT_EQUIPMENT_ID: "PARENTEQUIPMENTID",
};

export const AREA_CONDITION = readonly({
	[FACTORY_ID_CONFIG.FACTORY_ID]: FACTORY_ID_CONFIG.FACTORY_ID,
	[FACTORY_ID_CONFIG.ROOT_AREA_ID]: FACTORY_ID_CONFIG.ROOT_AREA_ID,
	[FACTORY_ID_CONFIG.PARENT_AREA_ID]: FACTORY_ID_CONFIG.AREA_ID,
});

export const EQUIPMENT_CONDITION = readonly({
	[FACTORY_ID_CONFIG.FACTORY_ID]: FACTORY_ID_CONFIG.FACTORY_ID,
	[FACTORY_ID_CONFIG.AREA_ID]: FACTORY_ID_CONFIG.AREA_ID,
	[FACTORY_ID_CONFIG.PARENT_EQUIPMENT_ID]: FACTORY_ID_CONFIG.EQUIPMENT_ID,
});

export const PORT_CONDITION = readonly({
	[FACTORY_ID_CONFIG.FACTORY_ID]: FACTORY_ID_CONFIG.FACTORY_ID,
	[FACTORY_ID_CONFIG.AREA_ID]: FACTORY_ID_CONFIG.AREA_ID,
	[FACTORY_ID_CONFIG.EQUIPMENT_ID]: FACTORY_ID_CONFIG.EQUIPMENT_ID,
});

export const FACTORY = readonly({
	TYPE: "TABLE_NAME",
	CHILD_CONFIG: {
		[ROOT]: [FACTORY_TABLE.FACTORY],
		[FACTORY_KEY.FACTORY]: [FACTORY_TABLE.AREA],
		[FACTORY_KEY.AREA]: [FACTORY_TABLE.AREA, FACTORY_TABLE.EQUIPMENT],
		[FACTORY_KEY.EQUIPMENT]: [FACTORY_TABLE.EQUIPMENT, FACTORY_TABLE.PORT],
	},
	CONDITION_CONFIG: {
		[FACTORY_TABLE.AREA]: AREA_CONDITION,
		[FACTORY_TABLE.EQUIPMENT]: EQUIPMENT_CONDITION,
		[FACTORY_TABLE.PORT]: PORT_CONDITION,
	},
});

//==================== Enum
export const ENUM_TYPE = readonly({
	NAME: "ENUMNAME",
	VALUE: "ENUMVALUE",
});

export const ENUM = readonly({
	TYPE: "TABLE_NAME",
	CHILD_CONFIG: {
		[ROOT]: ENUM_TYPE.NAME,
		[ENUM_TYPE.NAME]: ENUM_TYPE.VALUE,
	},
});

//==================== Recipe
export const RECIPE_TABLE = readonly({
	RECIPE_GROUP: "RecipeNameSpace",
	RECIPE: "Recipe",
	RECIPE_PARAMETER: "RecipeParameter",
	RECIPE_PARAMETER_DEF: "RecipeParameterDef",
});

export const RECIPE_TYPE = readonly({
	LOGICAL: "Logical",
	EQUIPMENT: "Equipment",
});

export const RECIPE_KEY = readonly(
	Object.keys(RECIPE_TABLE).reduce((acc, key) => {
		acc[key] = RECIPE_TABLE[key].toUpperCase();
		return acc;
	}, {}),
);

export const RECIPE_ID_CONFIG = {
	PARENT_GROUP_ID: "SUPERRECIPENAMESPACEID",
	LOGICAL_GROUP_ID: "LOGICALRECIPENAMESPACEID",
	RECIPE_GROUP_ID: "RECIPENAMESPACEID",
	RECIPE_ID: "RECIPEID",
	RECIPE_PARAMETER_ID: "RECIPEPARAMETERID",
	RECIPE_TYPE: "RECIPETYPE",
};

export const RECIPE_GROUP_CONDITION = readonly({
	[RECIPE_ID_CONFIG.PARENT_GROUP_ID]: RECIPE_ID_CONFIG.RECIPE_GROUP_ID,
});

export const RECIPE_CONDITION = readonly({
	[RECIPE_ID_CONFIG.RECIPE_GROUP_ID]: RECIPE_ID_CONFIG.RECIPE_GROUP_ID,
	[RECIPE_ID_CONFIG.RECIPE_TYPE]: RECIPE_ID_CONFIG.RECIPE_TYPE,
});

export const RECIPE_PARAMETER_CONDITION = readonly({
	[RECIPE_ID_CONFIG.RECIPE_GROUP_ID]: RECIPE_ID_CONFIG.RECIPE_GROUP_ID,
});

export const RECIPE = readonly({
	TYPE: RECIPE_ID_CONFIG.RECIPE_TYPE,
	CHILD_CONFIG: {
		[ROOT]: [RECIPE_TABLE.RECIPE_GROUP],
		[RECIPE_TYPE.LOGICAL]: [RECIPE_TABLE.RECIPE_GROUP, RECIPE_TABLE.RECIPE],
		[RECIPE_TYPE.EQUIPMENT]: [RECIPE_TABLE.RECIPE],
	},
	CONDITION_CONFIG: {
		[RECIPE_TABLE.RECIPE_GROUP]: RECIPE_GROUP_CONDITION,
		[RECIPE_TABLE.RECIPE]: RECIPE_CONDITION,
		[RECIPE_TABLE.RECIPE_PARAMETER]: RECIPE_PARAMETER_CONDITION,
	},
});
